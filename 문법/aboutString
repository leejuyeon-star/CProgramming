/*
    char, char* char[]에 관하여
*/


//***********************문자 셋 변환하는 방법***************************
// * WBCS(UNICODE) 기반으로 컴파일하고자 하는 경우 "#include보다 위에" 해당 코드 삽입
// #define UNICODE
// #define _UNICODE

// * MBCS 기반으로 컴파일하고자 하는 경우 아래 코드 삽입
#undef UNICODE
#undef _UNICODE
//**************************************************

#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <tchar.h>
#include <locale.h>		//WBCS 한글 사용시 필요	

int main(void){

#ifdef UNICODE		// WBCS 한글 사용시 적용
	_wsetlocale(LC_ALL, L"korean");	
#endif

    //********char : 1byte만 저장 가능************
    TCHAR ch1 = 'a';
    _tprintf(_T("%c \n"), ch1);

    
    _tprintf(_T("\n"));
    

    //*********************************



    //*********char* : 여러글자 저장 가능**********
    LPCSTR chp1 ="abcd";

    _tprintf(_T("%s \n"), chp1);
    _tprintf(_T("%c \n"), chp1[0]);

    LPCSTR chp2 = "가나";
    _tprintf(_T("%s \n"), chp2);
    _tprintf(_T("%c \n"), chp2[0]);

    _tprintf(_T("\n"));
    //*******************************

    //**************char [] : ***********************
    //***********************************************



    //************************출력함수*************************
    _tprintf(_T("*********출력함수***********\n"));     

    //*출력함수1 : _tprintf();
    _tprintf(_T("출력함수1 : _tprintf(); \n"));     
    TCHAR pch1 = 'a';
    _tprintf(_T("%c \n"), pch1);     

    //*출력함수2 : int putchar(int c);
    //*1byte만 출력, 인자가 숫자여도 문자로 출력, 한글 불가
    _tprintf(_T("출력함수2 : int putchar(int c); \n"));     
    putchar('P');      
    _tprintf(_T("\n"));
    putchar(80);
    _tprintf(_T("\n"));

    //*출력함수3 : int fputc(int c, FILE * stream);
    //*1byte만 출력, 출력의 대상 직접 지정가능, 한글 불가
    //(stdout : 모니터에 출력)(파일글에 쓰기 가능)
    _tprintf(_T("출력함수3 : int fputc(int c, FILE * stream); \n"));     
    fputc('P', stdout);     
    _tprintf(_T("\n"));

    //*출력함수4 : int puts(const char * s);
    //*여러byte 출력, 자동으로 \n 됨 
    _tprintf(_T("출력함수4 : int puts(const char * s); \n"));     
    LPCSTR pch2 = "abcde";
    puts(pch2);
    LPCSTR pch3 = "가나다";
    puts(pch3);

    //*출력함수5 : int fputs(const char * s, FILE * stream);
    //*여러byte 출력
    //(stdout : 모니터에 출력)(파일글에 쓰기 가능)
    _tprintf(_T("출력함수5 : int fputs(const char * s, FILE * stream);\n"));     
    LPCSTR pch4 = "abcde";
    fputs(pch4, stdout);
    _tprintf(_T("\n"));
    LPCSTR pch5 = "가나다";
    fputs(pch5, stdout);
    _tprintf(_T("\n"));


    //***************************입력함수****************************
    _tprintf(_T("************입력함수**************** \n"));     
    //*입력함수1 : 
    //* 공백, tab, \n 입력시 그 전 문자까지 저장함
    
    
    //*입력함수2 : int getchar(void);
    //*1byte만 입력받음, 한글 불가
    _tprintf(_T("입력함수2 : int getchar(void); \n"));     
    TCHAR gch1;
    gch1 = getchar();      
    getchar();           //(엔터 남으므로 마저 지워야 함)
    putchar(gch1);
    _tprintf(_T("\n"));


    //*입력함수3 : int fgetc(FILE * stream);
    //*1byte만 입력받음, 문자를 입력받을 대상 지정가능, 한글 불가 
    //(stdin : 키보드에서 받아옴) (파일글 받아오기 가능)
    _tprintf(_T("입력함수3 : int fgetc(FILE * stream); \n"));     
    TCHAR gch2;
    gch2 = fgetc(stdin);   
    getchar();             //(엔터 남으므로 마저 지워야 함)
    putchar(gch2);
    _tprintf(_T("\n"));

    //*입력함수4 : char * gets(char * s);
    //?여러byte 입력받음, 한글불가?, char[지정수]가능, char* 불가
    //*저장 가능한 byte수를 한정하지 않아 접근 허용하지 않은 메모리에 침범 가능. 가급적 사용x
    _tprintf(_T("입력함수4 : char * gets(char * s); \n"));
    TCHAR gch3[10];
    gets(gch3);
    puts(gch3);

    //*입력함수5 : char * fgets(char * s, int n, FILE * stream);
    //?(n-1)byte만 저장 (\0도 저장하므로 -1), char[지정수]가능, char* 불가, 한글 불가?
    //*공백 입력해도 계속 저장, \n입력한 경우 \n까지 저장
    //(stdin : 키보드에서 받아옴) (파일글 받아오기 가능)
    _tprintf(_T("입력함수5 : char * fgets(char * s, int n, FILE * stream); \n"));
    TCHAR gch4[10];
    fgets(gch4, sizeof(gch4), stdin);
    puts(gch4);
    _tprintf(_T("%s"), gch4);

    // LPCSTR gch5;
    // char * gch5;
    // fgets(gch5, 10, stdin);


    

    // TCHAR str1[] = _T("가나다라마");

    // _tprintf(_T("%s"), str1);
    system("pause");
}
